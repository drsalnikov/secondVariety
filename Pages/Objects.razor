@page "/objects"

@using System.Linq.Dynamic.Core
@using SecondVariety.Models;
@using System.Linq;
@inject NavigationManager nav
@inject ContextMenuService ContextMenuService
@inject GrpcClientService grpcClient 

  <h1>Объекты</h1>
    <AuthorizeView Roles="Administrator">
     <div class="row gap-3">
       <div class="col">
         <RadzenFieldset Text="Действия" class="gap-3">
           <RadzenButton Click=@OnAddNewClick Text="Создать" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Primary" />
         </RadzenFieldset>
       </div>
     </div>
    </AuthorizeView>
  <div class="row gap-3">    
    <RadzenDataGrid
        IsLoading="@isLoading"
        Count="@count"
        Data="@objects"
        AllowSorting="true"
        AllowPaging="true"
        AllowColumnPicking="true"
        ShowPagingSummary="true"
        PageSize="10"
        PagerHorizontalAlign="HorizontalAlign.Center"
        TItem="SecondVariety.Models.Object"
        SelectionMode="DataGridSelectionMode.Single" 
        @bind-Value=@selected
        CellContextMenu="@OnCellContextMenu"
    >
        <Columns>
            <RadzenDataGridColumn TItem="SecondVariety.Models.Object" Property="Kod" Title="Код" Width="50px" TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="SecondVariety.Models.Object" Property="Name" Title="Наименование" Width="120px" />
            <RadzenDataGridColumn TItem="SecondVariety.Models.Object" Property="LastTo" Title="Дата последнего ТО"  FormatString="{0:d}" Width="120px"/>
            <RadzenDataGridColumn TItem="SecondVariety.Models.Object" Property="NextTo" Title="Дата следующего ТО"  FormatString="{0:d}" Width="120px"/>
            <RadzenDataGridColumn TItem="SecondVariety.Models.Object" Property="DateFrom" Title="Начальная дата"  FormatString="{0:d}" Width="120px"/>
            <RadzenDataGridColumn TItem="SecondVariety.Models.Object" Property="NarFrom" Title="Начальное значение наработки" Width="120px" />
            <RadzenDataGridColumn TItem="SecondVariety.Models.Object" Property="PlanYear" Title="Планируемая наработка в год" Width="120px" />
            <RadzenDataGridColumn TItem="SecondVariety.Models.Object" Property="TekNar" Title="Текущая наработка" Width="120px" />
            <RadzenDataGridColumn TItem="SecondVariety.Models.Object" Property="SredNar" Title="Среднедневная наработка" Width="120px" />
        </Columns>
    </RadzenDataGrid>
  </div>
  <div class="row gap-3">
    <RadzenCard class="console-message">
      <span class="console-message-text">*Для редактирования таблицы, используйте правую кнопку мыши.</span>
    </RadzenCard>
  </div>
@code {
  [CascadingParameter]
  private Task<AuthenticationState> authenticationStateTask { get; set; }
  private System.Security.Claims.ClaimsPrincipal? User ;
  //RadzenDataGrid<SecondVariety.Models.Object> grid;
  private IEnumerable<SecondVariety.Models.Object> objects;
  IList<SecondVariety.Models.Object> selected;
  private bool isLoading = false;
  private int count;
  //EventConsole console;

  protected override async Task OnInitializedAsync()
  {
    await base.OnInitializedAsync();
    await LoadData();
  }

  async Task LoadData()
  {
    isLoading = true;
    await Task.Yield();
    User = (await authenticationStateTask).User;
   
     var objs = grpcClient.GetObjects() ;
    objects = objs.OrderBy(o => o.Kod) ;
    //.OrderBy(o => o.Kod); //db1context.Objects.OrderBy(o => o.Kod).AsQueryable();
    count = objects.Count();
    isLoading = false;
  }

  void OnAddNewClick()
  {
    if(User.IsInRole("Administrator"))
    {
      nav.NavigateTo("/objects/new", true);
    }
  }

  void OnCellContextMenu(DataGridCellMouseEventArgs<SecondVariety.Models.Object> args)
  {
    selected = new List<SecondVariety.Models.Object>() { args.Data };
    if(User.IsInRole("Administrator"))
    {
    ContextMenuService.Open(args,
        new List<ContextMenuItem> {
              new ContextMenuItem(){ Text = "Редактировать", Value = 1 },
              new ContextMenuItem(){ Text = "Удалить", Value = 2 },
          }, 
          (e) => { 
            switch (e.Value)
            {
              case 1:
                nav.NavigateTo($"/objects/edit/{args.Data.Id}", true);
                break;
              case 2:
                DeleteObject(args.Data.Id);
                break;
            }

            //console.Log($"e: {e.Value}. args: {args.Data.Num}."); 
          }
        );
     }
  }

  void DeleteObject(int Id)
  {
  /*  SecondVariety.Models.Object? myObj = db1context.Objects.FirstOrDefault(r => r.Kod == kod);
    if (myObj != null)
    {
      db1context.Objects.Remove(myObj);
      db1context.SaveChanges();
    }
*/  
    grpcClient.DeleteObject(Id);
   
    
  }
}